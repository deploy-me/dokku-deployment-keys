#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_AVAILABLE_PATH/common/functions"

APP="$2"
APP_SPECIFIC_KEY_FOLDER="$DOKKU_ROOT/.deployment-keys/$APP/.ssh"
SHARED_KEY_FOLDER="$DOKKU_ROOT/.deployment-keys/shared/.ssh"

case "$1" in
  deploymentkeys:create)
    verify_app_name "$APP"

    if [[ -f "$APP_SPECIFIC_KEY_FOLDER/id_rsa.pub" ]]; then
      dokku_log_fail "This app already has a pair of keys. Delete them first to create new ones";
      exit 1
    fi

    if [[ ! -d "$APP_SPECIFIC_KEY_FOLDER" ]]; then
      mkdir -p "$APP_SPECIFIC_KEY_FOLDER"
      chown -R dokku:dokku "$DOKKU_ROOT/.deployment-keys/$APP"
    fi

    ssh-keygen -q -t rsa -b "${3:-4096}" -f "$APP_SPECIFIC_KEY_FOLDER/id_rsa" -N ""
    chown -R dokku:dokku "$DOKKU_ROOT/.deployment-keys"
    dokku_log_quiet "Keys created, here is the public key for $APP:"
    cat "$APP_SPECIFIC_KEY_FOLDER/id_rsa.pub";
    dokku_log_quiet "They will be baked into the container on next push/rebuild"
    ;;

  deploymentkeys:delete)
    verify_app_name "$APP"
    rm -Rf "$APP_SPECIFIC_KEY_FOLDER"/id_rsa*
    dokku_log_quiet "Removed deployment keys for $APP"
    ;;

  deploymentkeys:shared)
    dokku_log_quiet "This is the current shared public key:"
    cat "$SHARED_KEY_FOLDER/id_rsa.pub";
    ;;

  deploymentkeys:show)
    verify_app_name "$APP"

    if [[ -f "$APP_SPECIFIC_KEY_FOLDER/id_rsa.pub" ]]
     then
      dokku_log_quiet "Private keys created, here is the public key for $APP:"
      cat "$APP_SPECIFIC_KEY_FOLDER/id_rsa.pub";
     else
      dokku_log_quiet "No private key for $APP. This is the shared public key:"
      cat "$SHARED_KEY_FOLDER/id_rsa.pub"
    fi
    ;;

  deploymentkeys:status)
    verify_app_name "$APP"
    if [[ -f "$APP_SPECIFIC_KEY_FOLDER/id_rsa.pub" ]]; then
      dokku_log_quiet "This app uses a private set of deployment keys."
    else
      dokku_log_quiet "This app uses the shared set of deployment keys."
    fi
    ;;

  help | deploymentkeys:help)
    help_content_func() {
      cat<<help_content
    deploymentkeys:create <app>   Create a pair of app-specific deployment keys
    deploymentkeys:delete <app>   Delete the current pair of deployment keys
    deploymentkeys:shared         Shows the current shared public key
    deploymentkeys:show <app>     Shows the current public key to add to your VCS
help_content
    }

    if [[ $1 = "deploymentkeys:help" ]]; then
      echo -e 'Usage: dokku deploymentkeys[:COMMAND]'
      echo ''
      echo 'Additional commands:'
      help_content_func | sort | column -c2 -t -s,
    else
      help_content_func
    fi

    ;;

  *)
    exit "$DOKKU_NOT_IMPLEMENTED_EXIT"
    ;;

esac
